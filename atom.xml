<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Hi,I'm Qiuncheng]]></title>
  <subtitle><![CDATA[/*每一个不曾起舞的日子都是对生命的辜负*/]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://qiuncheng.com/"/>
  <updated>2015-12-20T12:23:08.000Z</updated>
  <id>http://qiuncheng.com/</id>
  
  <author>
    <name><![CDATA[Qiuncheng]]></name>
    <email><![CDATA[mc_hello@163.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[马上就要考试了,我要坚持一月不上网(:~~~]]></title>
    <link href="http://qiuncheng.com/2015/12/20/30-blog-pause-update/"/>
    <id>http://qiuncheng.com/2015/12/20/30-blog-pause-update/</id>
    <published>2015-12-20T12:03:57.000Z</published>
    <updated>2015-12-20T12:23:08.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>2015年马上就要结束了，想想今年过的还挺快的。下周起也要大三上期期末考试了。~~~~这真是一个悲伤的故事。为了备考，我决定从明天起一直到放假都不再碰电脑了，不过书还是要看的(:-:)。。。  </p>
</blockquote>
<p>复(yu)习(xi)路很长，加油！<br>所以<del>找不到我</del>（见了下图）一定不要惊讶。<a id="more"></a><br><img src="http://7xk67j.com1.z0.glb.clouddn.com/bg_404_197cad791f518e37b47f7264221bab94.png" alt="404 Not Found."><br><br></p>
<blockquote>
<p><u>因为我一定在远方默默复习！呼吸学习气息！</u>  </p>
</blockquote>
<p><img src="http://7xk67j.com1.z0.glb.clouddn.com/mv1.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>2015年马上就要结束了，想想今年过的还挺快的。下周起也要大三上期期末考试了。~~~~这真是一个悲伤的故事。为了备考，我决定从明天起一直到放假都不再碰电脑了，不过书还是要看的(:-:)。。。  </p>
</blockquote>
<p>复(yu)习(xi)路很长，加油！<br>所以<del>找不到我</del>（见了下图）一定不要惊讶。]]>
    
    </summary>
    
      <category term="Life" scheme="http://qiuncheng.com/tags/Life/"/>
    
      <category term="Life" scheme="http://qiuncheng.com/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于我是用过的iOS数据存储的一些总结[未完待续]]]></title>
    <link href="http://qiuncheng.com/2015/12/11/29-ios-persist-data-not-over/"/>
    <id>http://qiuncheng.com/2015/12/11/29-ios-persist-data-not-over/</id>
    <published>2015-12-11T06:48:57.000Z</published>
    <updated>2015-12-11T06:48:57.000Z</updated>
    <content type="html"><![CDATA[<h4 id="前言">前言</h4><blockquote>
<p>关于自己目前学习遇到过的数据存储相关的一些总结，同时也是味了方便自己在将来开发过程中回顾。  </p>
</blockquote>
<hr>
<h4 id="正文">正文</h4><h5 id="1-_Use_the_NSCoding_protocol_to_read_and_write_data-">1. Use the NSCoding protocol to read and write data.</h5><p>这个是我在完成了Apple官方推出的<a href="https://developer.apple.com/library/ios/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html#//apple_ref/doc/uid/TP40015214-CH2-SW1" target="_blank" rel="external">Start Developing iOS Apps (Swift)</a>这个小小的Demo之后认识的一个<code>Persist Data</code>方式。也是我遇到的第一个数据存储方式，它就像我的初恋一般，每回我想存储数据我就第一个会想起它来，虽然大多数情况下用不上。<br>下面我简单总结下这种<code>Persist Data</code>:</p>
<ul>
<li>需要使用到的协议：<code>NSCoding</code></li>
<li><p>需要使用到协议<code>NSCoding</code>中的方法：<a id="more"></a></p>
<ol>
<li><figure class="highlight"><figcaption><span>encodeWithCoder(aCoder: NSCoder)  ```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. ```init(coder aDecoder: NSCoder)</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>使用方式：  </p>
<ol>
<li><p>将你要保存的数据进行归档</p>
<ul>
<li>使用<code>encodeWithCoder</code>方法：</li>
<li>例如：<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func encodeWithCoder(aCoder: <span class="built_in">NSCoder</span>) &#123;</span><br><span class="line">    aCoder<span class="variable">.encodeObject</span>(name, forKey: PropertyKey<span class="variable">.nameKey</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>在这里需要注意的是你必须为<code>name</code>属性提供key，这个key将来在解码的时候会用到。</strong></p>
</li>
<li><p>将数据进行解档（姑且先这么说吧，就是unarchive）</p>
<ul>
<li>使用<code>init(coder aDecoder: NSCoder)</code></li>
<li><p>例如：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">required convenience init?(coder aDecoder: <span class="built_in">NSCoder</span>) &#123;</span><br><span class="line">    let name = aDecoder<span class="variable">.decodeObjectForKey</span>(PropertyKey<span class="variable">.nameKey</span>) as! String</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>需要注意的是这里用到了上面的key，这里还用到了convenience，那就需要调用<code>designated init</code>方法了，不过这个Xcode会有提示的。</strong></p>
</li>
</ul>
</li>
<li><p>为你的data创建一个路径。</p>
<ul>
<li><p>具体操作如下：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> let DocumentsDirectory = <span class="built_in">NSFileManager</span>()<span class="variable">.URLsForDirectory</span>(<span class="variable">.DocumentDirectory</span>, inDomains: <span class="variable">.UserDomainMask</span>)<span class="variable">.first</span>!</span><br><span class="line"><span class="keyword">static</span> let ArchiveURL = DocumentsDirectory<span class="variable">.URLByAppendingPathComponent</span>(<span class="string">"meals"</span>)</span><br></pre></td></tr></table></figure>
<p><strong>注意下在这里你使用了static方法将来在调用的时候直接使用类名即可。</strong></p>
</li>
</ul>
</li>
<li>接下来比较主要的就是保存和使用数据了。<ul>
<li>这里比较主要就是两句  <figure class="highlight"><figcaption><span>toFile: Meal.ArchiveURL.path!)```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```NSKeyedUnarchiver.unarchiveObjectWithFile(Meal.ArchiveURL.path!) as? [Meal]</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<hr>
<h5 id="2-_使用NSUserDefault保存数据（虽然我知道这种方式，但是仔细翻了下自己的Demo，发现竟然没有相关的Demo。让我哭会~）">2. 使用<code>NSUserDefault</code>保存数据（<del>虽然我知道这种方式，但是仔细翻了下自己的Demo，发现竟然没有相关的Demo。让我哭会</del>~）</h5><p>但是我又看了下官方文档，感觉这个真的没啥好说的，一般用来设置啥的，以后遇到了再看吧，不过我简单用一个例子介绍下吧。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> userDefault = <span class="type">NSUserDefaults</span>()</span><br><span class="line">userDefault.setBool(<span class="literal">true</span>, forKey: <span class="string">"marry"</span>)</span><br><span class="line">userDefault.setObject(<span class="string">"zhangsan"</span>, forKey:<span class="string">"name"</span>)</span><br><span class="line">userDefault.setInteger(<span class="number">19</span>, forKey: <span class="string">"age"</span>)</span><br><span class="line"><span class="keyword">var</span> name = userDefault.valueForKey(<span class="string">"name"</span>)</span><br><span class="line"><span class="built_in">print</span>(name!)</span><br></pre></td></tr></table></figure></p>
<p><strong>这里的打印结果是<code>zhangsan</code></strong><br><em>我猜测一般应用的启动界面应该就是用的这个NSUserDefault保存的。大致就是当用户在第一次启动的之后就将那个Flag设置为false，并且今后不更新应用不改变那个值。</em></p>
<hr>
<h5 id="3-_使用Plist保存数据">3. 使用<code>Plist</code>保存数据</h5><p>这个我只是在书上看到过，不过幸亏自己也做了小Demo。<br>    比如：在我的Demo里我新建了一个<code>data.plist</code>,如下面图片所示：<br>    <img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151210-0.png" alt=""><br>    然后我在ViewController里调用读取这个plist里的文件。代码如下：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">let dict = <span class="built_in">NSDictionary</span>(contentsOfURL: <span class="built_in">NSURL</span>(fileURLWithPath: <span class="built_in">NSBundle</span><span class="variable">.mainBundle</span>()<span class="variable">.pathForResource</span>(<span class="string">"data"</span>, ofType: <span class="string">"plist"</span>)!))</span><br><span class="line">        </span><br><span class="line">print(dict!) <span class="comment">//打印出这个dict</span></span><br><span class="line">let name:[String] = dict![<span class="string">"name"</span>] as! [String]</span><br><span class="line">print(<span class="string">"names为：\(name)"</span>) <span class="comment">//打印出所有的名字</span></span><br><span class="line">        </span><br><span class="line">let ages:[String] = dict![<span class="string">"age"</span>] as! [String]</span><br><span class="line">let age:[String] = dict?<span class="variable">.valueForKey</span>(<span class="string">"age"</span>) as! [String]</span><br><span class="line"><span class="comment">//上面两种方式调用dict里面的东西相同</span></span><br><span class="line">print(<span class="string">"ages 为：\(ages)"</span>)</span><br><span class="line">print(age)</span><br></pre></td></tr></table></figure></p>
<p>在这里打印的结果为：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    age =     (</span><br><span class="line">        <span class="number">18</span>,</span><br><span class="line">        <span class="number">19</span>,</span><br><span class="line">        <span class="number">20</span></span><br><span class="line">    );</span><br><span class="line">    name =     (</span><br><span class="line">        Zhangsan,</span><br><span class="line">        lisi,</span><br><span class="line">        wangwu</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line">names为：[<span class="string">"Zhangsan"</span>, <span class="string">"lisi"</span>, <span class="string">"wangwu"</span>]</span><br><span class="line">ages 为：[<span class="string">"18"</span>, <span class="string">"19"</span>, <span class="string">"20"</span>]</span><br><span class="line">[<span class="string">"18"</span>, <span class="string">"19"</span>, <span class="string">"20"</span>]</span><br></pre></td></tr></table></figure></p>
<p><strong>成功的读取了Plist里的数据。写入plist也类似，需要用到方法<code>writeToPath</code></strong></p>
<hr>
<h5 id="4-_使用CoreData">4. 使用<code>CoreData</code></h5><p>有很多人说<code>CoreData</code>不好用，还一直在推荐<code>Realm</code>,不过对于我这种新手来说，真的无所谓，我先学会是用如何使用<code>CoreData</code>在说吧，毕竟<code>CoreData</code>是apple自己推出的，也算是最基本的吧，<code>Realm</code>是第三方的，你连这最基本的都不会用还怎么用第三方呢？所以我目前还是处于学会如何使用方面，好多原理不太懂，不过我相信随着我学习的加深，我会在后来对他们有一个清晰的认识的，先对自己说声加油哈！  </p>
<ul>
<li>在新建工程的时候勾选CoreData选项<br>  这样在你的项目AppDelegate.swift就会生成<code>// MARK: - Core Data stack</code>与<code>// MARK: - Core Data Saving support</code>的文件。这两个标记中含有的代码就与你使用CoreData有关系的。<br>  同时在你的文件夹结构里会自动建立<code>xxx.xcdatamodel</code>，其中的<code>xxx</code>表示的是你的<code>AppDelegate.swift</code>里的<code>NSBundle.mainBundle().URLForResource(&quot;htiList&quot;, withExtension: &quot;momd&quot;)!</code>对应的名字。</li>
<li>接下来在<code>xxx.xcdatamodel</code>创建数据实体。比如我们在这里创建了一个车<code>Person</code>的实体。<br>  注意：<u>在CoreData里一个实体<code>Entity</code>就相当于一个类。</u><br>如下图：<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151211-0.png" alt="创建实体后结果"></li>
<li><p>接下来就可以保存数据到Core Data了。</p>
<ol>
<li>首先<code>import CoreData</code></li>
<li>更换模型<code>var people = [NSManagedObject]()</code></li>
<li><p>实现保存</p>
 <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    func saveName(name: String) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 获取delegate的一个引用</span></span><br><span class="line">let appDelegate =</span><br><span class="line"><span class="built_in">UIApplication</span><span class="variable">.sharedApplication</span>()<span class="variable">.delegate</span> as! AppDelegate</span><br><span class="line"><span class="comment">// 获取NSManagedObjectContext</span></span><br><span class="line">let managedContext = appDelegate<span class="variable">.managedObjectContext</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2插入一个对象到managed object context中</span></span><br><span class="line">let entity =  <span class="built_in">NSEntityDescription</span><span class="variable">.entityForName</span>(<span class="string">"Person"</span>,</span><br><span class="line">    inManagedObjectContext:managedContext)</span><br><span class="line"></span><br><span class="line">let person = <span class="built_in">NSManagedObject</span>(entity: entity!,</span><br><span class="line">    insertIntoManagedObjectContext: managedContext)</span><br><span class="line"></span><br><span class="line"><span class="comment">//3</span></span><br><span class="line">person<span class="variable">.setValue</span>(name, forKey: <span class="string">"name"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//4</span></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    try managedContext<span class="variable">.save</span>()</span><br><span class="line">    <span class="comment">//5</span></span><br><span class="line">    people<span class="variable">.append</span>(person)</span><br><span class="line">&#125; catch let error as <span class="built_in">NSError</span>  &#123;</span><br><span class="line">    print(<span class="string">"Could not save \(error), \(error.userInfo)"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取数据</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">fetchData</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 获取Core data 中的数据</span></span><br><span class="line">    <span class="comment">//1</span></span><br><span class="line">    <span class="keyword">let</span> appDelegate =</span><br><span class="line">    <span class="type">UIApplication</span>.sharedApplication().delegate <span class="keyword">as</span>! <span class="type">AppDelegate</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> managedContext = appDelegate.managedObjectContext</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//2</span></span><br><span class="line">    <span class="keyword">let</span> fetchRequest = <span class="type">NSFetchRequest</span>(entityName: <span class="string">"Person"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//3</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> results =</span><br><span class="line">        try managedContext.executeFetchRequest(fetchRequest)</span><br><span class="line">        people = results <span class="keyword">as</span>! [<span class="type">NSManagedObject</span>]</span><br><span class="line">    &#125; catch <span class="keyword">let</span> error <span class="keyword">as</span> <span class="type">NSError</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Could not fetch <span class="subst">\(error)</span>, <span class="subst">\(error.userInfo)</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ul>
<p><span style="color:orange">好了，应该总结的够多了吧，不过未完待续…</span></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="前言">前言</h4><blockquote>
<p>关于自己目前学习遇到过的数据存储相关的一些总结，同时也是味了方便自己在将来开发过程中回顾。  </p>
</blockquote>
<hr>
<h4 id="正文">正文</h4><h5 id="1-_Use_the_NSCoding_protocol_to_read_and_write_data-">1. Use the NSCoding protocol to read and write data.</h5><p>这个是我在完成了Apple官方推出的<a href="https://developer.apple.com/library/ios/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html#//apple_ref/doc/uid/TP40015214-CH2-SW1">Start Developing iOS Apps (Swift)</a>这个小小的Demo之后认识的一个<code>Persist Data</code>方式。也是我遇到的第一个数据存储方式，它就像我的初恋一般，每回我想存储数据我就第一个会想起它来，虽然大多数情况下用不上。<br>下面我简单总结下这种<code>Persist Data</code>:</p>
<ul>
<li>需要使用到的协议：<code>NSCoding</code></li>
<li><p>需要使用到协议<code>NSCoding</code>中的方法：]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[你的4寸iPhone出现上下黑框了吗？]]></title>
    <link href="http://qiuncheng.com/2015/12/08/28-iOS-black-autolayout/"/>
    <id>http://qiuncheng.com/2015/12/08/28-iOS-black-autolayout/</id>
    <published>2015-12-08T11:29:00.000Z</published>
    <updated>2015-12-08T12:41:04.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>对于iOS新手来说，其中最困难也是最麻烦的就包括AutoLayout，但是之前我从来都没有注意到这个，以为自己看了点AutoLayout的东西就可以随意想象，不多用它，所以导致的结果就是我以前写的程序在iPhone4和4s上运行的很好，但是当遇到iPhone5之后，却发现出现了上下黑框，这让我这个新手很是气愤，然后我拿iPhone6测试也一样黑框，但是我在preview里好好的，什么都能够正常显示，这是为什么，于是我就各种百度，bing，Google，果然功夫不负有心啊，我在Google上找到了答案。  <a id="more"></a></p>
</blockquote>
<center><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151208-0.png" alt="可爱的黑框框"></center><br>问题已经描述的很清楚了吧，接下来我们就来看看解决方案吧。<br><br><strong>1.</strong> 确定你的<code>Use Auto Layout</code>和<code>Size Size Classes</code>是勾选上的<br><center><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151208-1.png" alt=""></center><br><strong>2.</strong> 确定你的<code>ViewController</code>的<code>Layout</code>是<code>wAny</code>、<code>hAny</code>类型的。<br><center><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151208-2.png" alt=""></center><br><strong>3.</strong> 确定你的相关的<code>Contraints</code>是适配<code>AutoLayout</code>。（这个没人能够帮你了，只能靠你自己去理解AutoLayout相关的约束了，并设定了)<br><strong>4.</strong> 为了适配所有不同屏幕大小的iPhone，你必须提供相关的背景图片（如：@2x, @3x，这个应该都知道吧，你在放图片到文件夹里的时候Xcode里会有三个相关提示吧！）<br><strong>5.</strong> 你必须提供<code>LaunchScreen</code>,其实我昨天的问题就出现在这里，没有提供<code>LaunchScreen</code>，就像这样，在<code>show the file inspector</code>里勾选<code>Use Auto Layout</code>、<code>Size Size Classes</code>和<code>Use as Launch Screen</code>。<br><center><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151208-4.png" alt=""><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151208-3.png" alt=""></center>

<p><em>Ok, 如果这样的话你的应用还是会出现上下黑框的话，我觉得你应该重新在检查下以上步骤。有一条不满足，很可能就是导致出现黑框的原因，另外提示下，注意善于利用<code>Preview</code>。</em><br><em>请记住，它这不仅仅是一个摆设。</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>对于iOS新手来说，其中最困难也是最麻烦的就包括AutoLayout，但是之前我从来都没有注意到这个，以为自己看了点AutoLayout的东西就可以随意想象，不多用它，所以导致的结果就是我以前写的程序在iPhone4和4s上运行的很好，但是当遇到iPhone5之后，却发现出现了上下黑框，这让我这个新手很是气愤，然后我拿iPhone6测试也一样黑框，但是我在preview里好好的，什么都能够正常显示，这是为什么，于是我就各种百度，bing，Google，果然功夫不负有心啊，我在Google上找到了答案。]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[这就是生活！]]></title>
    <link href="http://qiuncheng.com/2015/12/01/25-life-12-1-/"/>
    <id>http://qiuncheng.com/2015/12/01/25-life-12-1-/</id>
    <published>2015-12-01T02:34:31.000Z</published>
    <updated>2015-12-01T02:55:04.000Z</updated>
    <content type="html"><![CDATA[<p>时间过得真快，今天都12月份了。马上又要到新的一年了。但是在这本该高兴地时候我却怎么也提不起神来，心情突然就像这西安的雾霾一样严重。。。<br>十分钟之前我还在刷<a href="https://twitter.com/qiuncheng" target="_blank" rel="external">Twitter</a>,还在<a href="http://stackoverflow.com/users/5353887/qiuncheng" target="_blank" rel="external">stackoverflow</a>上提问题，但是此刻当我看向窗外，看向外面白茫茫的一片，我突然有种失落感。我们现在的生活基本都是出门不靠走路，都是这样的天气让人怎么出门，这样的天气让人怎么不靠走路？我忽然想到有天要是我有了儿子，他出生的时候或许雾霾比现在还要严重些吧。（<em>虽然现在还没女票，让我小小的YY下’:)</em>）  <a id="more"></a><br>但是当我深思些的时候却发现我的心情和雾霾并没有太大关系，只是雾霾引起了我的深思。我主要还在想期末快结束了，而我计划的12月开始复习也已经开始了，虽然我并没有开始复习，但是却反映出时间不等你的问题。最近的两个月可能是我最充实的两个月，大学的前两年真的知道怎么就这么过来了唉，但是从10月份自己接触iOS以来我觉得自己的每一天都是那么充实，每一天都有忙不完的事情，每一天都在按计划进行着一系列的安排。大学四年转眼间匆匆而逝，不发现点自己真正喜欢的东西真的有点对不起自己。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>时间过得真快，今天都12月份了。马上又要到新的一年了。但是在这本该高兴地时候我却怎么也提不起神来，心情突然就像这西安的雾霾一样严重。。。<br>十分钟之前我还在刷<a href="https://twitter.com/qiuncheng">Twitter</a>,还在<a href="http://stackoverflow.com/users/5353887/qiuncheng">stackoverflow</a>上提问题，但是此刻当我看向窗外，看向外面白茫茫的一片，我突然有种失落感。我们现在的生活基本都是出门不靠走路，都是这样的天气让人怎么出门，这样的天气让人怎么不靠走路？我忽然想到有天要是我有了儿子，他出生的时候或许雾霾比现在还要严重些吧。（<em>虽然现在还没女票，让我小小的YY下’:)</em>）]]>
    
    </summary>
    
      <category term="Life" scheme="http://qiuncheng.com/tags/Life/"/>
    
      <category term="Life" scheme="http://qiuncheng.com/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一张图帮你集齐所有git命令]]></title>
    <link href="http://qiuncheng.com/2015/11/24/25-git-command-all/"/>
    <id>http://qiuncheng.com/2015/11/24/25-git-command-all/</id>
    <published>2015-11-24T13:17:07.000Z</published>
    <updated>2015-11-24T13:25:09.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>请别小看我哈，我可是大自然的搬运工吆~  </p>
</blockquote>
<p>继上篇博文展示了git的部分常用命令的使用，这回在网上突然看到一张神奇的图片，真的是神器图片，这张图包含了所有的git命令，非常全面。所以就直接搬运过来了。</p>
<p>原图来自极分享，网址<a href="http://www.finalshares.com/read-178" target="_blank" rel="external">http://www.finalshares.com/read-178</a>    </p>
<ul>
<li>图片很大，请先擦亮眼睛看好了~~<a id="more"></a><br><img src="http://7xk67j.com1.z0.glb.clouddn.com/gitgit命令大全.jpg" alt="这是一张神奇的图片"></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>请别小看我哈，我可是大自然的搬运工吆~  </p>
</blockquote>
<p>继上篇博文展示了git的部分常用命令的使用，这回在网上突然看到一张神奇的图片，真的是神器图片，这张图包含了所有的git命令，非常全面。所以就直接搬运过来了。</p>
<p>原图来自极分享，网址<a href="http://www.finalshares.com/read-178">http://www.finalshares.com/read-178</a>    </p>
<ul>
<li>图片很大，请先擦亮眼睛看好了~~]]>
    
    </summary>
    
      <category term="git" scheme="http://qiuncheng.com/tags/git/"/>
    
      <category term="git" scheme="http://qiuncheng.com/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客添加了访问次数记录]]></title>
    <link href="http://qiuncheng.com/2015/11/22/24-hexo-firebase-record-time/"/>
    <id>http://qiuncheng.com/2015/11/22/24-hexo-firebase-record-time/</id>
    <published>2015-11-22T13:09:44.000Z</published>
    <updated>2015-11-22T13:24:05.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>想看记录请滑动到最底部，HaHa~~</p>
</blockquote>
<p>意外的时刻发现了别人的博客底部还有访问次数统计，于是果断给自己的博客也弄了一个呐，用的是<a href="www.firebase.com">firebase</a>,不多说，下面我给大家几个资源，让你的hexo博客系统也具有访问次数统计吧。<br>都是别人写好的比较好的文章：  </p>
<ul>
<li><a href="http://www.pangjian.info/2015/02/27/realtime-count-firebase/#more" target="_blank" rel="external">基于Firebase的Hexo博客实时访问数统计</a></li>
<li><a href="http://ibruce.info/2013/12/22/count-views-of-hexo/" target="_blank" rel="external">为hexo博客添加访问次数统计功能</a></li>
</ul>
<p>万事万物都是有优缺点的，firebase也不例外，最大缺点就是显示很慢，估计是被墙的原因。有点就不说了，你懂就行！</p>
<blockquote>
<p>说明：第一个链接中给的代码中后面一段firebase的javascript（从new一个Firebase对象一直到最后）代码可以直接以script的形式放在footer的底部，亲测可用，因为我就是这样做的。~~</p>
</blockquote>
<a id="more"></a>]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>想看记录请滑动到最底部，HaHa~~</p>
</blockquote>
<p>意外的时刻发现了别人的博客底部还有访问次数统计，于是果断给自己的博客也弄了一个呐，用的是<a href="www.firebase.com">firebase</a>,不多说，下面我给大家几个资源，让你的hexo博客系统也具有访问次数统计吧。<br>都是别人写好的比较好的文章：  </p>
<ul>
<li><a href="http://www.pangjian.info/2015/02/27/realtime-count-firebase/#more">基于Firebase的Hexo博客实时访问数统计</a></li>
<li><a href="http://ibruce.info/2013/12/22/count-views-of-hexo/">为hexo博客添加访问次数统计功能</a></li>
</ul>
<p>万事万物都是有优缺点的，firebase也不例外，最大缺点就是显示很慢，估计是被墙的原因。有点就不说了，你懂就行！</p>
<blockquote>
<p>说明：第一个链接中给的代码中后面一段firebase的javascript（从new一个Firebase对象一直到最后）代码可以直接以script的形式放在footer的底部，亲测可用，因为我就是这样做的。~~</p>
</blockquote>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://qiuncheng.com/tags/Hexo/"/>
    
      <category term="Life" scheme="http://qiuncheng.com/tags/Life/"/>
    
      <category term="Hexo" scheme="http://qiuncheng.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[error: Your local changes to the following files would be overwritten by checkout以及git常用命令]]></title>
    <link href="http://qiuncheng.com/2015/11/21/23-git-error-checkout/"/>
    <id>http://qiuncheng.com/2015/11/21/23-git-error-checkout/</id>
    <published>2015-11-21T14:55:07.000Z</published>
    <updated>2015-12-11T06:54:02.000Z</updated>
    <content type="html"><![CDATA[<h5 id="git_问题回忆录">git 问题回忆录</h5><p>最近使用git一直遇到问题，前段时间还把自己的工程项目全部删除了，真的是苦恼，这次决心要把git吃个遍，可是刚学会了如何新建Branch，却发现自己缺了点东西，不知道怎么把分支同步到master，真的是郁闷，总不能一直让我在github官网上删除同步吧。<br>可是多谢万能的<strong>Google</strong> #此处略去三千字#，让我迅速找到了相关命令，没错，就是它<br><code>git checkout master</code> 先切换到主分支。<br><code>git merge &#39;branch name&#39;</code>  将分支合并到主分支。<br>可是依然有问题，<code>error: Your local changes to the following files would be overwritten by checkout</code>,就是在题目中给出的问题。<br>感谢万能的<code>stackoverflow</code>，不仅帮我解决了iOS上的问题，更是帮我解决了git的大问题。鉴于<code>stackoverflow</code>国内被墙，我还是截张图片来吧，<a id="more"></a><br><img src="http://7xk67j.com1.z0.glb.clouddn.com/gitQQ20151121-0.png" alt="解决方案"><br>大致分析下就是你的分支里有文件修改了还没有保存，其实我是保存过的，我还特地进了Xcode去保存了下，但是这里不知道这是为什么。按着这个人的回答做就是了，果然没错，成功切换到master，并合并到主分支。 哈哈，其实也蛮简单的，就是第一次用就遇到这么大的问题有点让我不甘心呐！<br>好了，既然讲到git，我就在网上找了一些git的常用命令，<strong>转发转发转发</strong>重要的事情说三遍。文章末尾我也附上原文链接。   </p>
<hr>
<h5 id="git常用命令【转载】">git常用命令【转载】</h5><blockquote>
<h3 id="新建repository">新建repository</h3></blockquote>
<p>本地目录下，在命令行里新建一个代码仓库（repository）<br>里面只有一个README.md<br>命令如下：  </p>
<h4 id="touch_README-md">touch README.md</h4><h4 id="git_init">git init</h4><p>初始化repository  </p>
<h4 id="git_add_README-md"><code>git add README.md</code></h4><p>将README.md加入到缓存区   </p>
<p><em>可以用<strong><code>git add --a</code></strong>将所有改动提交到缓存（注意是两个杠）</em></p>
<h4 id="git_commit_-m_&quot;first_commit&quot;"><code>git commit -m &quot;first commit&quot;</code></h4><p>提交改变，并且附上提交信息”first commit”</p>
<blockquote>
<h3 id="push">push</h3></blockquote>
<h4 id="git_remote_add_origin_https://github-com/XXX(username)/YYYY(projectname)-git"><code>git remote add origin  https://github.com/XXX(username)/YYYY(projectname).git</code></h4><p>加上一个remote的地址，名叫origin，地址是github上的地址（Create a new repo就会有）<br><em>因为Git是分布式的，所以可以有多个remote.</em>  </p>
<h4 id="git_push_-u_origin_master"><code>git push -u origin master</code></h4><p>将本地内容push到github上的那个地址上去。<br><code>参数-u</code><br>用了参数-u之后，以后就可以直接用不带参数的git pull从之前push到的分支来pull。<br>此时如果origin的master分支上有一些本地没有的提交,push会失败,<br>所以解决的办法是, 首先设定本地master的上游分支:</p>
<h4 id="git_branch_-set-upstream-to=origin/master"><code>git branch --set-upstream-to=origin/master</code></h4><p>然后pull:    </p>
<h4 id="git_pull_-rebase"><code>git pull --rebase</code></h4><p>最后再push:  </p>
<h4 id="git_push"><code>git push</code></h4><blockquote>
<h3 id="分支">分支</h3></blockquote>
<p>新建好的代码库有且仅有一个主分支（master），它是自动建立的。<br>可以新建分支用于开发：</p>
<h4 id="git_branch_develop_master"><code>git branch develop master</code></h4><p>新建一个叫develop的分支，基于master分支<br>切换到这个分支：</p>
<h4 id="git_checkout_develop"><code>git checkout develop</code></h4><p>现在可以在这个develop分支上做一些改动，并且提交。<br>注意：切换分支的时候可以发现，在Windows中的repository文件夹中的文件内容也会实时相应改变，变成当前分支的内容。</p>
<ul>
<li><h4 id="push方法1：">push方法1：</h4></li>
</ul>
<p>现在如果想直接Push这个develop分支上的内容到github</p>
<h4 id="git_push_-u_origin"><code>git push -u origin</code></h4><p>如果是新建分支第一次push，会提示：<br>fatal: The current branch develop has no upstream branch.<br>To push the current branch and set the remote as upstream, use</p>
<h4 id="git_push_-set-upstream_origin_develop"><code>git push --set-upstream origin develop</code></h4><p>输入这行命令，然后输入用户名和密码，就push成功了。</p>
<p>以后的push就只需要输入git push origin</p>
<ul>
<li><h4 id="push方法2：">push方法2：</h4></li>
</ul>
<p>比如新建了一个叫dev的分支，而github网站上还没有，可以直接：</p>
<h4 id="git_push_-u_origin_dev"><code>git push -u origin dev</code></h4><p>这样一个新分支就创建好了。</p>
<ul>
<li><h4 id="push方法3：">push方法3：</h4></li>
</ul>
<p>提交到github的分支有多个，提交时可以用这样的格式：</p>
<h4 id="git_push_-u_origin_local:remote"><code>git push -u origin local:remote</code></h4><h4 id="比如_git_push_-u_origin_master:master">比如 <code>git push -u origin master:master</code></h4><p>表明将本地的master分支（冒号前）push到github的master分支（冒号后）。<br>如果左边不写为空，将会删除远程的右边分支。</p>
<blockquote>
<h3 id="创建分支的另一种方法">创建分支的另一种方法</h3></blockquote>
<h4 id="用命令git_checkout_-b_develop2_develop">用命令<code>git checkout -b develop2 develop</code></h4><p>可以新建一个分支develop2，同时切换到这个分支</p>
<blockquote>
<h3 id="删除分支">删除分支</h3></blockquote>
<h4 id="查看所有的分支_git_branch">查看所有的分支 <code>git branch</code></h4><h4 id="删除develop2分支_git_branch_-d_develop2">删除develop2分支 <code>git branch -d develop2</code></h4><blockquote>
<h3 id="Clone">Clone</h3></blockquote>
<p>使用git clone+github地址的方法，项目默认只有master分支。git branch也只有master</p>
<p>要看所有的分支：<code>git branch -a</code>或者是<code>git branch -r</code></p>
<p>这时候要新建一个分支，叫做dev，基于远程的dev分支：<code>git checkout -b dev origin/dev</code></p>
<blockquote>
<h3 id="加Tag">加Tag</h3></blockquote>
<h4 id="git_tag_tagname_develop"><code>git tag tagname develop</code></h4><p>git tag中的两个参数，一个是标签名称，另一个是希望打标签的点develop分支的末梢。</p>
<blockquote>
<h3 id="合并分支">合并分支</h3></blockquote>
<h4 id="git_checkout_master"><code>git checkout master</code></h4><p>先转到主分支</p>
<h4 id="git_merge_-no-ff_develop"><code>git merge --no-ff develop</code></h4><p>然后把develop分支merge过来</p>
<p>参数意义：<br>不用参数的默认情况下，是执行快进式合并。<br>使用参数–no-ff，会执行正常合并，在master分支上生成一个新节点。<br>merge的时候如果遇到冲突，就手动解决，然后重新add，commit即可。  </p>
<blockquote>
<p>相关链接：<br>文章转自圣骑士Wind的博客，地址<a href="http://www.cnblogs.com/mengdd/p/3447464.html" target="_blank" rel="external">http://www.cnblogs.com/mengdd/p/3447464.html</a><br>github帮助：<a href="https://help.github.com/articles/set-up-git/" target="_blank" rel="external">https://help.github.com/articles/set-up-git/</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h5 id="git_问题回忆录">git 问题回忆录</h5><p>最近使用git一直遇到问题，前段时间还把自己的工程项目全部删除了，真的是苦恼，这次决心要把git吃个遍，可是刚学会了如何新建Branch，却发现自己缺了点东西，不知道怎么把分支同步到master，真的是郁闷，总不能一直让我在github官网上删除同步吧。<br>可是多谢万能的<strong>Google</strong> #此处略去三千字#，让我迅速找到了相关命令，没错，就是它<br><code>git checkout master</code> 先切换到主分支。<br><code>git merge &#39;branch name&#39;</code>  将分支合并到主分支。<br>可是依然有问题，<code>error: Your local changes to the following files would be overwritten by checkout</code>,就是在题目中给出的问题。<br>感谢万能的<code>stackoverflow</code>，不仅帮我解决了iOS上的问题，更是帮我解决了git的大问题。鉴于<code>stackoverflow</code>国内被墙，我还是截张图片来吧，]]>
    
    </summary>
    
      <category term="git" scheme="http://qiuncheng.com/tags/git/"/>
    
      <category term="git" scheme="http://qiuncheng.com/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[instance member 'gameView'cannot be used on type '...']]></title>
    <link href="http://qiuncheng.com/2015/11/21/22-ios-instance../"/>
    <id>http://qiuncheng.com/2015/11/21/22-ios-instance../</id>
    <published>2015-11-21T11:05:11.000Z</published>
    <updated>2015-11-21T11:48:50.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>貌似昨天也遇到这样的问题，但是却没有在意，只是在<code>stackoverflow</code>上一下子找到了解决方案也没有在意，不过今天又遇到了这样的问题，确实让我很恼火，如下图所示，我要干什么就不在这里向大家说了。但是这里确实有错误，所以说这应该是一种规范吧，得找到相关东西，尽量避免以后出现这种错误，因此把它写出来应该影响会更深刻些。   </p>
</blockquote>
<p><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151121-0.png" alt="错误提示"><br>在<code>stackoverflow</code>上可以看到问题出在这里Xcode不知道gameView是谁！在这里我们在gameView前面添加了一个<code>self.</code>结果又出现了这个问题。如下图：<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151121-1.png" alt="self.gameView错误"><br><a id="more"></a><br>看到这里我想你肯定诧异了，明明添加了<code>self</code>并且制定了<code>gameView</code>是本对象下的view，可是为什么还是不可以呢？这里又有一个问题了。根据<code>stackoverflow</code>上的提示，此时self并没有初始化，所以系统也不知道self属性是啥!!哈哈哈哈哈~~~~<br>这下应该懂了吧，所以要对该属性添加lazy限制。来看下《<a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html" target="_blank" rel="external">The Swift Programming Language: Properties</a>》对lazy stored property的定义吧。<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151121-2.png" alt="lazy stored property"><br>这里指明了在需要用的时候才会调用它，所以不用担心self初始化的问题了。hiahia，完美解决。。。<br>下面附上<code>stackoverflow</code>上问题链接<a href="http://stackoverflow.com/questions/32544935/instance-member-view-cannot-be-used-on-type-gamescene" target="_blank" rel="external">http://stackoverflow.com/questions/32544935/instance-member-view-cannot-be-used-on-type-gamescene</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>貌似昨天也遇到这样的问题，但是却没有在意，只是在<code>stackoverflow</code>上一下子找到了解决方案也没有在意，不过今天又遇到了这样的问题，确实让我很恼火，如下图所示，我要干什么就不在这里向大家说了。但是这里确实有错误，所以说这应该是一种规范吧，得找到相关东西，尽量避免以后出现这种错误，因此把它写出来应该影响会更深刻些。   </p>
</blockquote>
<p><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151121-0.png" alt="错误提示"><br>在<code>stackoverflow</code>上可以看到问题出在这里Xcode不知道gameView是谁！在这里我们在gameView前面添加了一个<code>self.</code>结果又出现了这个问题。如下图：<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151121-1.png" alt="self.gameView错误"><br>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sendAsynchronousRequest竟然被弃用了！！！]]></title>
    <link href="http://qiuncheng.com/2015/11/19/21-iOS-sendAsynchronousRequest-deprecated/"/>
    <id>http://qiuncheng.com/2015/11/19/21-iOS-sendAsynchronousRequest-deprecated/</id>
    <published>2015-11-19T12:53:34.000Z</published>
    <updated>2015-11-20T11:44:58.000Z</updated>
    <content type="html"><![CDATA[<h6 id="我去，iOS9改动太大，NSURLConnection竟然被NSURLSession替代了。">我去，iOS9改动太大，<code>NSURLConnection</code>竟然被<code>NSURLSession</code>替代了。</h6><p>然而我看了半天<code>NSURLConnection</code>，刚学会怎么用，竟然告诉我不能用了。简直不能忍了。呜呜呜呜呜<del>~</del>  </p>
<hr>
<p>这是不是也提醒了我一件事，那就是Swift才是王道，看来apple也正在抛弃原来Objective-C的那些臃肿繁琐的东西呀，哈哈哈哈，好事情，不过我还得再去看看<code>NSURLSession</code>了，呜呜呜呜~~~~伐开心！！</p>
<p>不管了，先来用下NSURLConnection实现一个小Demo再说吧，虽然舍弃了，但还是可以用的吗，仅仅是Wornning而已呀！</p>
<hr>
<a id="more"></a>
<p><del>【Demo待更新！！！！】</del><br>好了现在回来更新Demo：  </p>
<p>其实Demo就是很简单的—利用k780.com—上的API来实现在imageView上显示一张图片的功能,哈哈哈哈哈~~~原谅我只会这么简单的。其实我觉得用些简单的已经足够了。具体见下图：<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/QQ20151120-2.png" alt="所有代码"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h6 id="我去，iOS9改动太大，NSURLConnection竟然被NSURLSession替代了。">我去，iOS9改动太大，<code>NSURLConnection</code>竟然被<code>NSURLSession</code>替代了。</h6><p>然而我看了半天<code>NSURLConnection</code>，刚学会怎么用，竟然告诉我不能用了。简直不能忍了。呜呜呜呜呜<del>~</del>  </p>
<hr>
<p>这是不是也提醒了我一件事，那就是Swift才是王道，看来apple也正在抛弃原来Objective-C的那些臃肿繁琐的东西呀，哈哈哈哈，好事情，不过我还得再去看看<code>NSURLSession</code>了，呜呜呜呜~~~~伐开心！！</p>
<p>不管了，先来用下NSURLConnection实现一个小Demo再说吧，虽然舍弃了，但还是可以用的吗，仅仅是Wornning而已呀！</p>
<hr>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[每一个iOS初学者都应该看看斯坦福大学白胡子《Developing iOS 8 Apps with Swift》视频]]></title>
    <link href="http://qiuncheng.com/2015/11/11/20-iOS-Stanford-iOS8/"/>
    <id>http://qiuncheng.com/2015/11/11/20-iOS-Stanford-iOS8/</id>
    <published>2015-11-11T02:45:11.000Z</published>
    <updated>2015-11-11T04:09:59.000Z</updated>
    <content type="html"><![CDATA[<h5 id="前言">前言</h5><p>不得不承认，在Swift出现以前对于没有天赋的人自学iOS开发确实有一定的难度，但是自从Apple推出了全新的编程语言Swift，我觉得人人都是程序员的口号越来越近了。<br>我是今年9月底无意中接触了Swift，当时我还在一股脑子得学Python，想着将来靠Python发大财，可是突然有天iPad的iBooks里多了本《The Swift Programming Language》，于是在一个月高风黑的晚上我独自一人看起了Swift，第一个晚上一下子把《Language Guide》看了个大半，从此就一发不可收拾，可能是我之前写过Python的原因，她两的语法现在时太像了。简洁优雅形容不过。<br>于是我就索性搞起了iOS。。。</p>
<h5 id="正文">正文</h5><p>我先是看的是<code>麦子学院</code>的Sundy老师的Swift入门视频，外加《The Swift Programming Language》和《Using Swift With Cocoa and Objective-C》这两本书，后来随着学习的深入，略微发现自己学的简直是太浅，不能马上运用起来，比如我想做一款“Classmates”的应用，想象着很美，甚至连原型图都画好了，结果做起来各种问题都跑出来了，说到底还是我了解的太少了，做一款应用需要的太多了，而且我的了解都是快速的碎片化的记忆，所以我就跑去网上找各种学习资源，果然黄天不负有心人，我终于找到了这个Stanford University的白胡子老师的视频，现在看到了第十集的UITableView,讲的真是好，虽然有些没有听懂，但还是很满足，至少让我对编程有了一个重新的认识，这样说吧，我举个很简单的例子，他的很多代码都值得我们去仔细好好研究下，每一个实例Demo里都充分运用Struct、Enum、Setter、Getter等等，这些小技巧能让你在今后代码重构，代码测试中省去好多事情。<br>我是那种不能光看视频的人，于是我在看视频的事后基本上把他写的东西又重新敲了一遍，有时候理解不等于会写，看什么都能够理解，但是当你去写的时候你发现自己不知怎么下手，所以看视频最好的边看边写，这样在理解的基础上能够加深认识。下面我想简单滴介绍下我之前跟着白胡子老师做的几个小Demo：<a id="more"></a>  </p>
<h6 id="Demo_#未完待续">Demo #未完待续</h6><ul>
<li>Calculator：这个可以说是我见过比较复杂的计算器之一，我说他复杂并不是他的功能，当然它的功能很简单的，只有四则运算和一个求平方根的运算。我说是它的逻辑，在这个Demo里充分运用到了闭包，以及MVC思想，我并不知道怎么来形容这个，但是在我看来这个Demo比国内好多其他老师的Demo好多了，主要是思想。<br>  <em>下面是该Demo的工程地址：<a href="https://github.com/qiuncheng/Calculator" target="_blank" rel="external">https://github.com/qiuncheng/Calculator</a></em></li>
<li>Psychologist: 这个嘛我学到最多的就是进一步加深了MVC以及手势识别，didSet和willSet的用法，这个在我之前真的是没有遇到过，貌似我还特地查了下didSetwillSet的用法，结果关东升老师的博客一下子点透了我，我特别喜欢这个项目的是那个笑脸，我最近还想着要给这个笑脸添加一些功能呢，比如改变颜色，自由搭配等等。<br>  <em>下面是该Demo的工程地址：<a href="https://github.com/qiuncheng/Psychologist" target="_blank" rel="external">https://github.com/qiuncheng/Psychologist</a></em></li>
<li>AutoLayout: 这个并不想多说，我觉得想要了解AutoLayout的必看，然后再结合这个Demo反复了解下绝对没有问题的。可能以后开发中会遇到些小问题，那就到时候再依次解决吧。<br>  <em>下面是该Demo的工程地址：<a href="https://github.com/qiuncheng/Autolayout" target="_blank" rel="external">https://github.com/qiuncheng/Autolayout</a></em></li>
<li>Cassini: 这个是我这几天看视频跟着做的Demo里面最后一个了。这个主要运用了ScrollView，但是也是有一些小问题的，在使用http的时候，这个可以结合我上篇博文看下，我觉得这个Demo里最主要是对多线程有了一个小小的认识，也算是了解吧。以后还得多加深对多线程的练习。<br>  <em>下面是该Demo的工程地址：<a href="https://github.com/qiuncheng/Casini" target="_blank" rel="external">https://github.com/qiuncheng/Casini</a></em><h6 id="结尾">结尾</h6>说了这么多，我总觉得少了些什么！原来是少了视频资源的地址，当时我是从学校资源网下载的。不过我这里还有百度云盘的下载地址：<a href="http://pan.baidu.com/s/1sjkU08X" target="_blank" rel="external">Developing iOS 8 Apps with Swift</a>,中文字幕转到<a href="https://github.com/x140yu/Developing_iOS_8_Apps_With_Swift" target="_blank" rel="external">Github有一个翻译项目</a>  <blockquote>
<p>或许你一定还想要源码，白胡子老师码字速度太快，😂😂。别急，在这里。<a href="https://github.com/m2mtech" target="_blank" rel="external">源码地址</a></p>
</blockquote>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h5 id="前言">前言</h5><p>不得不承认，在Swift出现以前对于没有天赋的人自学iOS开发确实有一定的难度，但是自从Apple推出了全新的编程语言Swift，我觉得人人都是程序员的口号越来越近了。<br>我是今年9月底无意中接触了Swift，当时我还在一股脑子得学Python，想着将来靠Python发大财，可是突然有天iPad的iBooks里多了本《The Swift Programming Language》，于是在一个月高风黑的晚上我独自一人看起了Swift，第一个晚上一下子把《Language Guide》看了个大半，从此就一发不可收拾，可能是我之前写过Python的原因，她两的语法现在时太像了。简洁优雅形容不过。<br>于是我就索性搞起了iOS。。。</p>
<h5 id="正文">正文</h5><p>我先是看的是<code>麦子学院</code>的Sundy老师的Swift入门视频，外加《The Swift Programming Language》和《Using Swift With Cocoa and Objective-C》这两本书，后来随着学习的深入，略微发现自己学的简直是太浅，不能马上运用起来，比如我想做一款“Classmates”的应用，想象着很美，甚至连原型图都画好了，结果做起来各种问题都跑出来了，说到底还是我了解的太少了，做一款应用需要的太多了，而且我的了解都是快速的碎片化的记忆，所以我就跑去网上找各种学习资源，果然黄天不负有心人，我终于找到了这个Stanford University的白胡子老师的视频，现在看到了第十集的UITableView,讲的真是好，虽然有些没有听懂，但还是很满足，至少让我对编程有了一个重新的认识，这样说吧，我举个很简单的例子，他的很多代码都值得我们去仔细好好研究下，每一个实例Demo里都充分运用Struct、Enum、Setter、Getter等等，这些小技巧能让你在今后代码重构，代码测试中省去好多事情。<br>我是那种不能光看视频的人，于是我在看视频的事后基本上把他写的东西又重新敲了一遍，有时候理解不等于会写，看什么都能够理解，但是当你去写的时候你发现自己不知怎么下手，所以看视频最好的边看边写，这样在理解的基础上能够加深认识。下面我想简单滴介绍下我之前跟着白胡子老师做的几个小Demo：]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何在iOS上优雅滴使用http://]]></title>
    <link href="http://qiuncheng.com/2015/11/11/19-iOS-http/"/>
    <id>http://qiuncheng.com/2015/11/11/19-iOS-http/</id>
    <published>2015-11-11T02:21:12.000Z</published>
    <updated>2015-11-11T02:39:52.000Z</updated>
    <content type="html"><![CDATA[<p>话说当我使用<code>http://</code>请求网络上一张图片时我发现我使用的Xcode7.1竟然不响应，然后还爆出了错误，这个让我很生气，后来查看错误提示得知貌似<code>http</code>不安全。<br>错误代码提示如下：<br><code>Transport security has blocked a cleartext HTTP (http://) resource load since it is insecure. Temporary exceptions can be configured via your app&#39;s Info.plist file.</code><br>百度了一段时间无果后果断挂上<code>VPN</code>翻了一下，在<a href="http://stackoverflow.com/questions/31254725/transport-security-has-blocked-a-cleartext-http" target="_blank" rel="external">StackOverflow</a>上找到了解决方案，原来就是在<code>info.plist</code>里enable<code>http</code>mode就可以了。奥，我的天！原谅我开接触这个。<br>可是如何添加呢？请看下图：<a id="more"></a><br><img src="http://7xk67j.com1.z0.glb.clouddn.com/iOSQQ20151111-0.png" alt="图中最上面蓝色框里面的添加到info.plist里">   </p>
<blockquote>
<p>OK，It helps， hope useful to you!</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>话说当我使用<code>http://</code>请求网络上一张图片时我发现我使用的Xcode7.1竟然不响应，然后还爆出了错误，这个让我很生气，后来查看错误提示得知貌似<code>http</code>不安全。<br>错误代码提示如下：<br><code>Transport security has blocked a cleartext HTTP (http://) resource load since it is insecure. Temporary exceptions can be configured via your app&#39;s Info.plist file.</code><br>百度了一段时间无果后果断挂上<code>VPN</code>翻了一下，在<a href="http://stackoverflow.com/questions/31254725/transport-security-has-blocked-a-cleartext-http">StackOverflow</a>上找到了解决方案，原来就是在<code>info.plist</code>里enable<code>http</code>mode就可以了。奥，我的天！原谅我开接触这个。<br>可是如何添加呢？请看下图：]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[push 与 modal的区别]]></title>
    <link href="http://qiuncheng.com/2015/10/27/19-ios-push-modal/"/>
    <id>http://qiuncheng.com/2015/10/27/19-ios-push-modal/</id>
    <published>2015-10-27T11:25:26.000Z</published>
    <updated>2015-10-27T14:44:40.000Z</updated>
    <content type="html"><![CDATA[<p><em>切换试图的两种方式，虽然经常用到，但还不是很了解，也是就去上网查询了一下，发现他两却有很大区别。</em>  </p>
<ul>
<li><p>push方式是通过导航控制器来实现试图切换，导航控制器的作用在这里相当于视图切换器的管理者，跳转后原来的控制器相当于被移出导航控制器栈，但是不会被立即销毁，移除栈的控制器会被放入自动释放池，等事件循环结束后如果没有强指针指向它，这时就会被销毁。   </p>
<a id="more"></a>
<p>  这里给出OC的<code>push</code>源码:  </p>
  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">	- (<span class="keyword">void</span>)pushViewController:(<span class="built_in">UIViewController</span> *)viewController animated:(<span class="built_in">BOOL</span>)animated; </span><br><span class="line"><span class="comment">// Uses a horizontal slide transition. Has no effect if the view controller is already in the stack.</span></span><br><span class="line">- (<span class="built_in">UIViewController</span> *)popViewControllerAnimated:(<span class="built_in">BOOL</span>)animated; </span><br><span class="line"><span class="comment">// Returns the popped controller.</span></span><br><span class="line">- (<span class="built_in">NSArray</span> *)popToViewController:(<span class="built_in">UIViewController</span> *)viewController animated:(<span class="built_in">BOOL</span>)animated; </span><br><span class="line"><span class="comment">// Pops view controllers until the one specified is on top. Returns the popped controllers.</span></span><br><span class="line">- (<span class="built_in">NSArray</span> *)popToRootViewControllerAnimated:(<span class="built_in">BOOL</span>)animated; </span><br><span class="line"><span class="comment">// Pops until there's only a single view controller left on the stack. Returns the popped controllers.</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>modal方法跳转控制器只是把目标控制器的View加到了现有控制器上，添加后的View依旧需要目标来管理，而且源控制也不会随新Modal来得View而移除销毁。Modal一般适用于两个不相关的控制器切换（Modal的效果是从屏幕底部向上覆盖源控制器的View)。<br>  这里给出OC的<code>modal</code>的源码：  </p>
  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">  The next two methods are replacements for presentModalViewController:animated and dismissModalViewControllerAnimated: The completion handler, if provided, will be invoked after the presented</span><br><span class="line">  controllers viewDidAppear: callback is invoked.</span><br><span class="line">*/</span></span><br><span class="line">- (<span class="keyword">void</span>)presentViewController:(<span class="built_in">UIViewController</span> *)viewControllerToPresent animated: (<span class="built_in">BOOL</span>)flag completion:(<span class="keyword">void</span> (^)(<span class="keyword">void</span>))completion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</span><br><span class="line"><span class="comment">// 关闭当初Modal出来的控制器</span></span><br><span class="line">- (<span class="keyword">void</span>)dismissViewControllerAnimated: (<span class="built_in">BOOL</span>)flag completion: (<span class="keyword">void</span> (^)(<span class="keyword">void</span>))completion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>这里通过源码也可以很容易的看出他俩之间的不同还是很大的，那么既然如此，在我看来modal主要用在最后的界面上，也就是说到了这个界面后你只能够返回去，不能再跳转到其他界面了，比如about界面，分享界面等等，而push照理说还是用的比较多的，这里就不在举例说明了。</strong>  </p>
<ul>
<li><p>下面说说storyboard中通过segue跳转的几种类型：  </p>
<ul>
<li>自动型：点击某个控件（比如按钮）的时候自动跳转到下一个控制器（按住Control键，直接从控件拖线到目标控制器，适用于不需要做任何判断的跳转）  </li>
<li><p>手动型：需要通过写代码手动执行Segue(必须由来源控制器执行Segue)，才能完成界面跳转（按住Control键，从来源控制器拖线到目标控制器，适用于需要做一些判断后再跳转的情况，比如登录的时候判断账号密码）</p>
  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跳转前做的一些准备工作</span></span><br><span class="line">- (<span class="keyword">void</span>)prepareForSegue:(<span class="built_in">UIStoryboardSegue</span> *)segue sender:(<span class="keyword">id</span>)sender <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</span><br><span class="line"><span class="comment">// 用来源控制器手动执行此方法</span></span><br><span class="line">- (<span class="keyword">void</span>)performSegueWithIdentifier:(<span class="built_in">NSString</span> *)identifier sender:(<span class="keyword">id</span>)sender <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果segue的style是push<br>取得sourceViewController所在的UINavigationController<br>调用UINavigationController的push方法将destinationViewController压入栈中，完成跳转</p>
</li>
<li>如果segue的style是modal<br>调用sourceViewController的presentViewController方法将destinationViewController展示出来</li>
<li>Storyboard上每一根用来界面跳转的线，都是一个UIStoryboardSegue对象（简称Segue）<blockquote>
<p>文章参考一篇博客,原文<a href="https://www.zybuluo.com/SanMao/note/139495" target="_blank" rel="external">地址.</a>觉得不错，所以分享到我的空间。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>切换试图的两种方式，虽然经常用到，但还不是很了解，也是就去上网查询了一下，发现他两却有很大区别。</em>  </p>
<ul>
<li><p>push方式是通过导航控制器来实现试图切换，导航控制器的作用在这里相当于视图切换器的管理者，跳转后原来的控制器相当于被移出导航控制器栈，但是不会被立即销毁，移除栈的控制器会被放入自动释放池，等事件循环结束后如果没有强指针指向它，这时就会被销毁。   </p>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS上简易图片浏览器的实现]]></title>
    <link href="http://qiuncheng.com/2015/10/16/17-iOS-image-browser/"/>
    <id>http://qiuncheng.com/2015/10/16/17-iOS-image-browser/</id>
    <published>2015-10-16T14:26:28.000Z</published>
    <updated>2015-10-18T01:28:51.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>学习完了iOS的UI部分后还没有做过什么东西呢？于是就想着借<code>UIImageView</code>做出一个简易的图片浏览器来。<br>其中需要用到的手势（gesture），来使<code>UIImageView</code>具有滑动事件。目前还不支持从手机相册中调用图片来实现浏览，只是单纯的将图片添加到应用包中。好了，不多说了，let’s get it！  </p>
</blockquote>
<ul>
<li><p>首先选择<code>Single View Application</code>新建工程，取名为<code>ImageViewBrowser</code>，在这里不勾选<code>core data</code>目前用不上那个。<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/storyboard.tiff" alt="工程大略"></p>
</li>
<li><p>打开storyboard，如下图所示，添加一个<code>ImageView</code>和两个<code>Button</code>到该<code>ViewController</code>，具体如下图所示：<a id="more"></a><br><img src="http://7xk67j.com1.z0.glb.clouddn.com/control拖拽.tiff" alt="将试图和代码建立联系"></p>
</li>
<li><p>使用辅助窗口control拖拽法将视图和代码之间建立联系。<br>结果如下：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="preprocessor">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> imageView1: <span class="type">UIImageView</span>!</span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="preprocessor">@IBAction</span> <span class="func"><span class="keyword">func</span> <span class="title">lastPicBusttonClicked</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="preprocessor">@IBAction</span> <span class="func"><span class="keyword">func</span> <span class="title">nextPicButtonClicked</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">didReceiveMemoryWarning</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.didReceiveMemoryWarning()</span><br><span class="line">        <span class="comment">// Dispose of any resources that can be recreated.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加图片资源到<code>Assets.xcassets</code>中，我在这里添加9张图片。</p>
</li>
<li><p>接下来的任务就是要编辑代码来实现图片的切换了。</p>
<ol>
<li>添加9张图片的<code>name</code>为:<br><code>var imagesNameString = [&quot;17&quot;,&quot;18&quot;,&quot;20&quot;,&quot;21&quot;,&quot;22&quot;,&quot;23&quot;,&quot;24&quot;,&quot;25&quot;,&quot;26&quot;]</code></li>
<li>设置标记数<code>flagNum</code>:<br><code>var flagNum:Int = 0</code></li>
<li><p>实现上一张和下一张方法，通过点击两个按钮来进行图片切换。具体代码实现如下：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">@IBAction</span> <span class="func"><span class="keyword">func</span> <span class="title">nextPicButtonClicked</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> flagNum == (imagesNameString.<span class="built_in">count</span>-<span class="number">1</span>)&#123;</span><br><span class="line">        flagNum = <span class="number">0</span></span><br><span class="line">        flagNum++</span><br><span class="line">        imageView1.image = <span class="type">UIImage</span>(named: imagesNameString[flagNum])</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        flagNum++</span><br><span class="line">        imageView1.image = <span class="type">UIImage</span>(named: imagesNameString[flagNum])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">@IBAction</span> <span class="func"><span class="keyword">func</span> <span class="title">lastPicButtonClicked</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> flagNum == <span class="number">0</span>&#123;</span><br><span class="line">        flagNum = (imagesNameString.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    flagNum--</span><br><span class="line">    imageView1.image = <span class="type">UIImage</span>(named: imagesNameString[flagNum])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>重点的时刻来了，通常我们的图片浏览器的话都是通过滑动实现切换图片的，下面我们将添加左右滑动切换图片资源。在此之前我们必须要对上面的两个方法体中的内容实现封装。所以我们在这里新建两个方法，分别为：nextPic()和lastPic()。  </p>
</li>
<li><p>先让我们来大致看下效果图吧。GIF走起！<br><center><img src="http://7xk67j.com1.z0.glb.clouddn.com/imageViewGif.gif" alt=""></center></p>
<blockquote>
<p>刚学会ui怎么可能会gesture呢，233333，本周继续更新《使用gesture实现图片切换》。</p>
</blockquote>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>学习完了iOS的UI部分后还没有做过什么东西呢？于是就想着借<code>UIImageView</code>做出一个简易的图片浏览器来。<br>其中需要用到的手势（gesture），来使<code>UIImageView</code>具有滑动事件。目前还不支持从手机相册中调用图片来实现浏览，只是单纯的将图片添加到应用包中。好了，不多说了，let’s get it！  </p>
</blockquote>
<ul>
<li><p>首先选择<code>Single View Application</code>新建工程，取名为<code>ImageViewBrowser</code>，在这里不勾选<code>core data</code>目前用不上那个。<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/storyboard.tiff" alt="工程大略"></p>
</li>
<li><p>打开storyboard，如下图所示，添加一个<code>ImageView</code>和两个<code>Button</code>到该<code>ViewController</code>，具体如下图所示：]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[“IOS上一个很有意思能解释“栈”的东西”]]></title>
    <link href="http://qiuncheng.com/2015/10/09/16-interesting-ios-nav/"/>
    <id>http://qiuncheng.com/2015/10/09/16-interesting-ios-nav/</id>
    <published>2015-10-09T11:14:31.000Z</published>
    <updated>2015-10-09T13:52:53.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>【未完待续…】突然发现iOS上有一个很好滴能够解释“栈”是什么的东西。</p>
</blockquote>
<p><img src="http://7xk67j.com1.z0.glb.clouddn.com/intersting.gif" alt="1到5push栈，5到1pop栈"></p>
<p><strong>我想应该在这里解释一下，其中1到5是一直点击“+”，5到1是一直点击“返回”。</strong><br>哈哈，懂的人一看就懂，不懂再看也没办法。<a id="more"></a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>【未完待续…】突然发现iOS上有一个很好滴能够解释“栈”是什么的东西。</p>
</blockquote>
<p><img src="http://7xk67j.com1.z0.glb.clouddn.com/intersting.gif" alt="1到5push栈，5到1pop栈"></p>
<p><strong>我想应该在这里解释一下，其中1到5是一直点击“+”，5到1是一直点击“返回”。</strong><br>哈哈，懂的人一看就懂，不懂再看也没办法。]]>
    
    </summary>
    
      <category term="iOS" scheme="http://qiuncheng.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://qiuncheng.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[听说你叫Swift，在下叶良辰并不服！]]></title>
    <link href="http://qiuncheng.com/2015/09/29/15-yeliangchen-Swift/"/>
    <id>http://qiuncheng.com/2015/09/29/15-yeliangchen-Swift/</id>
    <published>2015-09-29T08:45:17.000Z</published>
    <updated>2015-10-01T14:09:11.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>我叫叶良辰，我有一千种方式让你无法在这里呆下去。  </p>
</blockquote>
<p>这句话我拿来借鉴，特别借此想对Swift说，毕竟原来想做一个android开发工程师，但是现在转了Swift，所以这句话可以让你对学习Swift充满信心。</p>
<p>我好像最近发现了Xcode7.0的一个小问题，不知道是小小的bug呢？还是我的代码写的不规范导致，反正就是在运行的时候没有预期的反应。大致就是我在代码里添加<code>button</code>的时候是没有问题的，但是当我在给这个<code>button</code>添加<code>action</code>的时候就出了问题。<code>action</code>总是添加不上去。<a id="more"></a></p>
<ul>
<li>添加<code>button</code>的代码如下：</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let <span class="tag">button</span> = <span class="function"><span class="title">UIButton</span><span class="params">(frame: CGRect(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="number">44</span>, height: <span class="number">44</span>)</span></span>)  </span><br><span class="line">    <span class="tag">button</span><span class="class">.backgroundColor</span> = UIColor.<span class="function"><span class="title">redColor</span><span class="params">()</span></span></span><br><span class="line">                </span><br><span class="line">    <span class="tag">button</span>.<span class="function"><span class="title">addTarget</span><span class="params">(self, action: <span class="string">"ratingButtonTapped:"</span>, forControlEvents: UIControlEvents.TouchDown)</span></span></span><br><span class="line">                </span><br><span class="line">    ratingButtons += [button]</span><br><span class="line">    <span class="function"><span class="title">addSubview</span><span class="params">(button)</span></span></span><br></pre></td></tr></table></figure>
<hr>
<ul>
<li>添加<code>action</code>的代码为：</li>
</ul>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">ratingButtonTapped</span><span class="params">(btn: UIButton)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Button pressed 👍"</span>)</span><br><span class="line">        <span class="type">NSLog</span>(<span class="string">"Button pressed 👍"</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>正常情况下在这里应该会有打印输出的，以及<code>Log</code>的，但是我在运行后却没有输出，代码应该是没有错的，我觉得可能是编辑器的问题仔细查看了一下搜索的东西，却没有发现类似的问题。苦恼ing，请万能的朋友们帮我下。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>我叫叶良辰，我有一千种方式让你无法在这里呆下去。  </p>
</blockquote>
<p>这句话我拿来借鉴，特别借此想对Swift说，毕竟原来想做一个android开发工程师，但是现在转了Swift，所以这句话可以让你对学习Swift充满信心。</p>
<p>我好像最近发现了Xcode7.0的一个小问题，不知道是小小的bug呢？还是我的代码写的不规范导致，反正就是在运行的时候没有预期的反应。大致就是我在代码里添加<code>button</code>的时候是没有问题的，但是当我在给这个<code>button</code>添加<code>action</code>的时候就出了问题。<code>action</code>总是添加不上去。]]>
    
    </summary>
    
      <category term="Swift" scheme="http://qiuncheng.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://qiuncheng.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[不忘初心，方得始终]]></title>
    <link href="http://qiuncheng.com/2015/09/26/14-laoluo-GreatFeeling/"/>
    <id>http://qiuncheng.com/2015/09/26/14-laoluo-GreatFeeling/</id>
    <published>2015-09-26T01:50:56.000Z</published>
    <updated>2015-09-26T08:21:02.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><strong>不要因为走的太远就忘记了当初为什么出发！  </strong></p>
</blockquote>
<p><img src="http://7xk67j.com1.z0.glb.clouddn.com/8EC7E45D-E261-499D-8A2C-0B5D81078C83.JPG" alt="宣传海报"><br>没有记错的话这是一本书的名字，作者徐泓。</p>
<blockquote>
<p>这是一本从纪录片出发的哲学书，他纪录着小人物构成的历史；是一本用影像去抵达的启示录，他思考的是如何用影像认识世界。从民生出发，以影像抵达。在最官方的平台，讲述老百姓的故事。<br>以上内容来自<a href="http://baike.baidu.com/link?url=AJ101ckPeknYd1wIoFHBEk_Pf7GdJWl39wKJ8sMPyrTl2KiLg99wu8LcF9kaYMkimYMmPmJbXDUqleaDkMeXIa" target="_blank" rel="external">百度百科</a>。</p>
</blockquote>
<p>如今自一次看到这句话，倍感亲切，总结之：<em>不忘初心，方得始终！</em> <a id="more"></a><br>昨晚参加了老罗的演讲，觉得备受鼓动。鼓动并不是被他搞笑的演技和讲话，而是他身上具有的创业精神。我不是典型的罗粉或者锤粉，但是你只要是一个奋力向上的人我觉得你都会有此感受，他身上所具有的不屈不挠的精神值得我们每一个人去学习，去继承。这个时代就属于这样的人，敢想敢做敢梦！<em>楞头青年</em>，姑且这么称呼老罗吧。虽然他早己不是青年。  </p>
<h5 id="其实我还是挺不认同老罗说他自己是个“楞头”的。">其实我还是挺不认同老罗说他自己是个“楞头”的。</h5><p>他提到自己当年谈那几个楞头工程师，两个楞头一碰到一起，就碰出了火花，但我依然不赞同，为什么呢？因为老罗很流氓呀！（不过貌似最近在往好的方面转变）他手下的工程师确实很楞头，这个可以理解，毕竟是<strong>程序员</strong>呀。（老罗可不许大家这么叫他们呀。）但是从昨天听老罗的讲话过程中我确实感受到老罗确实不是一个楞头，他虽然是高二就肄业，大学没上过，但是他很有才，真的，很具有说服人的能力。或者与他的一份执着分不开吧！  </p>
<h5 id="老罗说他自己是一个企业家。">老罗说他自己是一个<strong>企业家</strong>。</h5><p>对，没错，至少从昨天看来老罗确实是一个企业家了。（之前我一直看他像个流氓）。衡量一个企业家的标准是什么？决策、组织、抗压、责任、坚强、等等。这些都可以用来作为一个企业家的标准。这些或者在两年前的老罗的身上确实不具备，但是现在看来老罗真的具备这些了，他真的在smartisan T1中成长了。少了一些流氓草根气息，多了一些企业家的风度和气度。  </p>
<h5 id="我为什么说老罗是一个流氓呢。（或许我以前对他有些偏见吧）">我为什么说老罗是一个流氓呢。（或许我以前对他有些偏见吧）</h5><p>老罗的《锤子便签》在iOS上做的确实很不错，很优秀，但是也确实有很流氓的地方，下面这个图可以很清楚地解释为什么流氓了。我玩过很多iOS应用，但是确实没有见过一款应用直接将自己的应用放在设置里面供用户来选择获取。还有“关注我们”，我本来觉得很好用的东西，但是有两个东西确实让我很讨厌了。也不知道为什么就是很讨厌。以前我看到这个的感觉就认为老罗是流氓。现在看来，确实是我误会他了。我因为不喜欢这种设计风格，而不太喜欢老罗本身，还说他是个流氓，确实很搞笑呐！<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/IMG_0097.PNG" alt="锤子便签"></p>
<h5 id="“乔布斯重新定义了手机，罗永浩重新定义了傻逼！”">“乔布斯重新定义了手机，罗永浩重新定义了傻逼！”</h5><p>我为什么把这句话放在这里呢？我现在觉得说这句话的人很傻逼！如果说单纯来看待老罗－一个英语老师，一个说相声演员来做手机，大家一定会说他是个<em>傻逼</em>，你说你一个好好相声不说，偏偏跑来手机圈瞎凑什么热闹。况且手机圈现在这么成熟，大家都在Apple的带领下，把 android做的越来越不像android了。可是现在的罗永浩不一样了。有了smarttisan T1之后的罗永浩现在看来真的是绅士，并不像傻逼了。反而我最近总是觉得雷布斯很傻逼了。没事干嘛发条微博说“小米4c比iphone6s还轻11克！”你说你，小米4c是塑料的，iPhone6s金属的哪里有可比性嘛！而且哎，人家6s貌似android中的旗舰机都没法和人家比吧，你说你干嘛发条那个微博，这不是找国人骂嘛！<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/QQ20150926-1@2x.png" alt="雷布斯的微博">  </p>
<h5 id="“Future_belongs_to_the_flew_of_us_still_willing_to_get_our_hands_dirty!_未来属于我们当中那些仍然愿意弄脏双手的少数分子！”">“Future belongs to the flew of us still willing to get our hands dirty! 未来属于我们当中那些仍然愿意弄脏双手的少数分子！”</h5><p>我特别喜欢老罗最后送给大家的这句话，我的理解就是，只要你敢于尝试，敢于坚持，你就一定可以走出一条你自己的路。而未来就把握在你自己的手中。Stay hungry, stay foolish. 保持<em>愣</em>的精神，保持一份渴望，保持学习的欲望，保持一份童心。这样你就离自己的梦想不远了。愿老罗的锤子大卖，愿锤子科技早日收购Apple。  <img src="http://7xk67j.com1.z0.glb.clouddn.com/IMG_0094.JPG" alt="未来属于我们当中那些仍然愿意弄脏双手的少数分子"><br><em>PS：最后欣赏几张我那渣手机像素拍出的不成样的图片吧。</em><br><img src="http://7xk67j.com1.z0.glb.clouddn.com/IMG_0099.JPG" alt="最喜欢的一张图"><br><img src="http://7xk67j.com1.z0.glb.clouddn.com/IMG_0098.JPG" alt="哈哈，这个真实罗粉"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p><strong>不要因为走的太远就忘记了当初为什么出发！  </strong></p>
</blockquote>
<p><img src="http://7xk67j.com1.z0.glb.clouddn.com/8EC7E45D-E261-499D-8A2C-0B5D81078C83.JPG" alt="宣传海报"><br>没有记错的话这是一本书的名字，作者徐泓。</p>
<blockquote>
<p>这是一本从纪录片出发的哲学书，他纪录着小人物构成的历史；是一本用影像去抵达的启示录，他思考的是如何用影像认识世界。从民生出发，以影像抵达。在最官方的平台，讲述老百姓的故事。<br>以上内容来自<a href="http://baike.baidu.com/link?url=AJ101ckPeknYd1wIoFHBEk_Pf7GdJWl39wKJ8sMPyrTl2KiLg99wu8LcF9kaYMkimYMmPmJbXDUqleaDkMeXIa">百度百科</a>。</p>
</blockquote>
<p>如今自一次看到这句话，倍感亲切，总结之：<em>不忘初心，方得始终！</em>]]>
    
    </summary>
    
      <category term="Life" scheme="http://qiuncheng.com/tags/Life/"/>
    
      <category term="Life" scheme="http://qiuncheng.com/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git: fatal unable to auto-detect email address]]></title>
    <link href="http://qiuncheng.com/2015/09/21/13-hexo-git-problem/"/>
    <id>http://qiuncheng.com/2015/09/21/13-hexo-git-problem/</id>
    <published>2015-09-21T10:20:25.000Z</published>
    <updated>2015-09-21T17:11:32.000Z</updated>
    <content type="html"><![CDATA[<p>如题目所示，这两周一直无法更新Blog，原因就在此，之前没有太注意，早上打开Blog一看还是很早之前的文章。于是我就仔细审查了一下hexo deploy后的东西，结果出现后面的一行fatal error。于是Google之，发现git是git里的email address和user name没有设置的原因。<strong>git: fatal unable to auto-detect email address</strong> </p>
<hr>
<p>解决方法如下：<br>在终端里进入hexo所在目录，执行如下两段代码。<br><code>$git config --global user.email &quot;you@example.com&quot;</code><br><code>$git config --global user.name &quot;user.name&quot;</code><br><a id="more"></a><br><em>PS：其中you@example.com为你Github邮箱，user.name为你的名字。OK，完美解决！</em><br>当你解决后你会发现执行<code>hexo deploy</code>之后会提示你create了什么！就像下图所示。<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/QQ20150921-4@2x.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>如题目所示，这两周一直无法更新Blog，原因就在此，之前没有太注意，早上打开Blog一看还是很早之前的文章。于是我就仔细审查了一下hexo deploy后的东西，结果出现后面的一行fatal error。于是Google之，发现git是git里的email address和user name没有设置的原因。<strong>git: fatal unable to auto-detect email address</strong> </p>
<hr>
<p>解决方法如下：<br>在终端里进入hexo所在目录，执行如下两段代码。<br><code>$git config --global user.email &quot;you@example.com&quot;</code><br><code>$git config --global user.name &quot;user.name&quot;</code><br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://qiuncheng.com/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://qiuncheng.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac主机名变成了bogon]]></title>
    <link href="http://qiuncheng.com/2015/09/21/12-mac-hostname/"/>
    <id>http://qiuncheng.com/2015/09/21/12-mac-hostname/</id>
    <published>2015-09-21T01:18:45.000Z</published>
    <updated>2015-09-21T17:11:19.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>如下图，今天打开Mac terminal终端，发现主机名突然变成了bogon，google了一下，发现大致可能是与dns有关，修改一下dns就好了，于是我修改的是DNS8.8.8.8<br><a id="more"></a><br><img src="http://7xk67j.com1.z0.glb.clouddn.com/QQ20150921-2@2x.png" alt=""></p>
</blockquote>
<p>修改正常后为：<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/QQ20150921-1@2x.png" alt=""><br><strong>OK，完美！</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>如下图，今天打开Mac terminal终端，发现主机名突然变成了bogon，google了一下，发现大致可能是与dns有关，修改一下dns就好了，于是我修改的是DNS8.8.8.8<br>]]>
    
    </summary>
    
      <category term="mac" scheme="http://qiuncheng.com/tags/mac/"/>
    
      <category term="Life" scheme="http://qiuncheng.com/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[其实英语文章并没有那么难看懂]]></title>
    <link href="http://qiuncheng.com/2015/09/20/11-English-artical/"/>
    <id>http://qiuncheng.com/2015/09/20/11-English-artical/</id>
    <published>2015-09-20T12:47:15.000Z</published>
    <updated>2015-09-21T17:11:01.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>为什么好多大学生不爱看英文文章呢？说实话吧，我们的英语水平都不应该低的，初中三年＋高中三年＋大学两年，为什么你还是不敢看英文文章或者说出英文呢？况且我们大多人都是过了英语四级的。可是英文文章你敢看吗？  </p>
</blockquote>
<p>哈哈，说的有些重，其实英文文章并没有那么难看懂，真的，根据我这么多天的学习，我发现要是让我说英语的话可能有很大的难度，但是让我来看英语文章的话，那简直真的是真的是<em>SO EASY</em>！并没有想象中的难。<br>当我这样说的时候肯定有些童鞋会说我得瑟，可能还会<em>“呵呵”</em>我！哈哈，下面我就向各位介绍下几点看英文文章的技巧。重在体验哈，大家看完技巧后可一定要去实验哈，不然看了也是白看! <a id="more"></a><br>奥，对了，先给大家看一篇英文文章，真的没有几个特别难的词汇，请看下面图片哈。<br><img src="http://7xk67j.com1.z0.glb.clouddn.com/thumb_IMG_0057_1024.jpg" alt="the Swift Programming Language"><br>这里面又特别难懂的词汇嘛？<br>或许这些吧。</p>
<ul>
<li>closure</li>
<li>delegate </li>
<li>omit</li>
<li>iimplicitly<br>貌似只有这些呀。可是这些影响你阅读嘛，基本上不影响，在你了解了这段主要讲的是<strong>闭包</strong>之后，我想你能更好地理解这段文字了。</li>
</ul>
<p>下面是诚恳的给大家今后看英文文章的建议：</p>
<ol>
<li>要理解各类英文文章的写作思路以及英语人说话方式</li>
<li>手机或者电脑里常备有<strong>英文词典</strong></li>
<li>开始的时候要提取段落的关键词，大致了解整段落的意思（必要的时候勾画出来），不要遇到不会的单词就要查词典</li>
<li>不要总是精读，有些不重要的可以一笔带过</li>
<li>注意小标题</li>
<li>注意总结部分</li>
<li>最后再将不会的单词查询意思，并做好记录 </li>
</ol>
<p><strong>还有最主要的是要多看英文东西，比如杂志、新闻学术论文等，往往你看一篇文章的收获要大约你看100篇阅读技巧。。</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>为什么好多大学生不爱看英文文章呢？说实话吧，我们的英语水平都不应该低的，初中三年＋高中三年＋大学两年，为什么你还是不敢看英文文章或者说出英文呢？况且我们大多人都是过了英语四级的。可是英文文章你敢看吗？  </p>
</blockquote>
<p>哈哈，说的有些重，其实英文文章并没有那么难看懂，真的，根据我这么多天的学习，我发现要是让我说英语的话可能有很大的难度，但是让我来看英语文章的话，那简直真的是真的是<em>SO EASY</em>！并没有想象中的难。<br>当我这样说的时候肯定有些童鞋会说我得瑟，可能还会<em>“呵呵”</em>我！哈哈，下面我就向各位介绍下几点看英文文章的技巧。重在体验哈，大家看完技巧后可一定要去实验哈，不然看了也是白看!]]>
    
    </summary>
    
      <category term="Life" scheme="http://qiuncheng.com/tags/Life/"/>
    
      <category term="Life" scheme="http://qiuncheng.com/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[每个程序员都应该学习使用Python]]></title>
    <link href="http://qiuncheng.com/2015/09/09/10-python-talkfreely/"/>
    <id>http://qiuncheng.com/2015/09/09/10-python-talkfreely/</id>
    <published>2015-09-09T01:00:08.000Z</published>
    <updated>2015-09-21T17:10:45.000Z</updated>
    <content type="html"><![CDATA[<h3 id="每个程序员都应该学习使用Python或Ruby">每个程序员都应该学习使用Python或Ruby</h3><p>如果你是个学生,你应该会C，C++和Java。还会一些VB，或C#/.NET。多少你还可能开发过一些Web网页，你知道一些HTML，CSS和JavaScript知识。总体上说，我们很难发现会有学生显露出掌握超出这几种语言范围外的语言的才能。这真让人遗憾，因为还有很多种编程语言，它们能让你成为一个更好的程序员。</p>
<p>在这篇文章里，我将会告诉你，为什么你一定要学习Python或Ruby语言。<a id="more"></a></p>
<ul>
<li><p>跟C/C++/Java相比 — Python/Ruby能让你用少的多的多的代码写出相同的程序。有人计算过，Python或Ruby写出的程序的代码行数只相当于相对应的Java代码的行数的五分之一。如果没有绝对的必要，为什么要花这么多时间写出这么多的代码呢？而且，有人说，一个优秀的程序员能维护的代码量最多是2万行。这不区分用的语言究竟是汇编，C还是Python/Ruby/PHP/Lisp。所以，如果你用Python/Ruby写，你一个人干的，不管是干什么，如果换用Java/C/C++，那都需要一个5人的小团队来干。</p>
</li>
<li><p>跟VB/PHP比较 — 跟PHP/VB相比，Python/Ruby的是一种从设计上讲比它们好的不知多少倍的语言。PHP和VB分别是在开发网站和桌面应用程序上非常流行的语言。它们流行的原因是非常的易学。不懂计算机的人也很容易的上手。如果你用这些语言开发过大型的项目，你就会发现这些语言的设计是如此的糟糕。是朋友，他就不会劝你使用PHP/VB。</p>
</li>
<li><p>跟Lisp/Scala/Haskell/Closure/Erlang相比 — Python/Ruby跟它们比起来显得相当的“主流”。确实，这些语言每种都有其很酷的特征，对于高级编程人员，了解这些语言能给他们对编程的思考带来实际的提升。但这些应该在你以后的职业生涯中才去决定学哪一两种。对于现在，Python/Ruby是在语言功能和实际运用之间平衡后的更好的选择。</p>
</li>
<li><p>跟Perl相比 — Python和Ruby都受恩于Perl，在这两种语言异军突起前，Perl是最好、最大的一种动态语言。但现在，Perl已是明日黄花，越来越多的人转向Ruby/Python。我感觉Perl的面向对象机制有点做作，很不好用。通常认为，Perl一种比较难学的语言，因为它提供你了太多不同的方法去完成同一个任务，它的语法有点像密码，非常不直观 — 除非你对它掌握的非常好。总之，我感觉Perl是一种对于学生来说不是很合适的语言—除非你有特殊的理由去学它(例如，你有很多正则表达式要处理，这是Perl的闪光点)。</p>
</li>
<li><p>跟sh/sed/awk/bash相比 — 如果你使用Linux/Unix，你可能需要做一些shell编程，甚至会编写一些不小的程序。但是，对于这些语言，一旦程序达到一定的行数，事情就会开始变得让你痛苦不堪，你最好是用Python去做这些事情。当然，做这种事情，Perl是最好的选择，Python排第二。(Ruby对于系统shell脚本不是很合适)。</p>
</li>
</ul>
<p>你可以在Google上搜一下“为什么X比Y好” — 其中把X换成Python或Ruby，把Y换成另外一种语言 — 你就会发现，有无数的文章来说明它们为什么这么好。</p>
<p>如果你有选择你的毕业设计使用的编程语言的自由，你应该选择Python或Ruby，它们能让你在开发项目的过程中节省一半的时间(除非你要开发的是移动应用，这样你必须要使用Java或Objective-C)。</p>
<p>下面是xkcd上的一幅漫画，告诉你掌握Python后你会变得多么的强大：</p>
<h2 id=""><img src="http://7xk67j.com1.z0.glb.clouddn.com/155708fczocdcc0d7liuut.png" alt=""></h2><blockquote>
<p>本文由“外刊IT评论”网(www.aqee.net)荣誉出品<br>[英文原文：Why every programmer should learn Python or Ruby ]</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="每个程序员都应该学习使用Python或Ruby">每个程序员都应该学习使用Python或Ruby</h3><p>如果你是个学生,你应该会C，C++和Java。还会一些VB，或C#/.NET。多少你还可能开发过一些Web网页，你知道一些HTML，CSS和JavaScript知识。总体上说，我们很难发现会有学生显露出掌握超出这几种语言范围外的语言的才能。这真让人遗憾，因为还有很多种编程语言，它们能让你成为一个更好的程序员。</p>
<p>在这篇文章里，我将会告诉你，为什么你一定要学习Python或Ruby语言。]]>
    
    </summary>
    
      <category term="python" scheme="http://qiuncheng.com/tags/python/"/>
    
      <category term="转载" scheme="http://qiuncheng.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="python" scheme="http://qiuncheng.com/categories/python/"/>
    
      <category term="转载" scheme="http://qiuncheng.com/categories/python/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
</feed>
